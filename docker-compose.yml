version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - PIDFILE=/usr/src/app/tmp/pids/server.pid
      - RAILS_ENV=${RAILS_ENV}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - POSTGRES_USER=ecosystem
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - DATABASE_HOST=database.service.ecosystem.internal
      - REDIS_URL=redis://redis.service.ecosystem.internal
    networks:
      - internal
    depends_on:
      - database.service.ecosystem.internal
      - redis.service.ecosystem.internal

  database.service.ecosystem.internal:
    image: postgres:9.6-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
#      - ./bin/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
    environment:
      - POSTGRES_USER=ecosystem
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}

  redis.service.ecosystem.internal:
    image: redis:4.0-alpine
    networks:
      - internal

  background:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
    environment:
      - PORT=3000
      - PIDFILE=/usr/src/app/tmp/pids/server.pid
      - RAILS_ENV=${RAILS_ENV}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - POSTGRES_USER=ecosystem
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - DATABASE_HOST=database.service.ecosystem.internal
      - REDIS_URL=redis://redis.service.ecosystem.internal
    networks:
      - internal
    depends_on:
      - app
      - database.service.ecosystem.internal
      - redis.service.ecosystem.internal
    entrypoint: ./bin/background

volumes:
  pg_data:

networks:
  internal:
    driver: bridge
